@model BoutiqueManagement.ViewModel.ItemViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
@*Here the important thing is that we need to remember always, when we work with the file upload control always add 
    this with form tag @enctype = "multipart/form-data" as in the following:*@
@using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ItemViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "enter item name", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ItemId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "enter item price", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategoryList, "CategoryId", "CategoryName"), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "select Category", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BrandId, new SelectList(Model.BrandList, "BrandId", "BrandName"), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "select Brand", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.file, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.file, new { type = "file" })
                @if (@ViewBag.filePath != null)
                { 
                <a href="/Items/OpenFilePath/?filePath=@System.Net.WebUtility.UrlEncode(@ViewBag.filePath)"><i class="fa fa-picture-o" style="font-size:17px;"></i></a>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
